/**
 * @file   {{basename}}
 * @author {{appname}}
 * @date   {{date}}
 * @brief  G5 IM EtherCAT CoE declarations.
 *
 *         Automatically generated by {{appname}}
 *         All edits will be destroyed
 */
 
#ifndef G5IM_COE_H
#define G5IM_COE_H

#include "objdef.h"
#include "tieschw.h"

extern const unsigned char esc_eeprom[];
{{#pdos}}

/******************************************************************************
*	Object 0x{{hex_index}}: {{description}}
******************************************************************************/
extern const TSDOINFOENTRYDESC asEntryDesc0x{{hex_index}}[];
extern const UCHAR aName0x{{hex_index}}[];

{{^typedef?}}
typedef struct STRUCT_PACKED_START {
{{#subs}}
    {{ctype}};
{{/subs}}} STRUCT_PACKED_END TOBJ{{hex_index}};  // data size:{{pdo_data_bitsize}}

extern TOBJ{{hex_index}} {{symbol}};
{{/typedef?}}
{{#typedef0?}}
typedef struct STRUCT_PACKED_START {
{{#subs}}
    {{ctype}};
{{/subs}}} STRUCT_PACKED_END {{typedef_base_name}}_type;  // data size:{{pdo_data_bitsize}}

extern {{typedef_base_name}}_type {{typedef_base_name}}[{{typedef_size}}];
{{/typedef0?}}
{{/pdos}}

extern TOBJECT ApplicationObjDic[];

/** 
 * @brief Reset (RxPDO) outputs.
 *
 * Resets the RxPDO data coming from the master to the default state.
 */
void PDO_ResetOutputs(void);
/** 
 * @brief Copy internal input data structures to PDO buffer
 *
 * Scans the TxPDO assign map and copies specified PDO data to
 * supplied PDO buffer for transmission via the hardware.
 *
 * @param pData A pointer to the target buffer
 */
void APPL_InputMapping(void* pData);
/** 
 * @brief Copy PDO buffer to internal output data structures
 *
 * Scans the RxPDO assign map and copies PDO buffer to specified 
 * internal output PDO data.
 *
 * @param pData A pointer to the buffer from which to read the data
 */
void APPL_OutputMapping(void* pData);

#endif // G5IM_COE_H
