/**
 * @file   {{basename}}
 * @author {{appname}}
 * @date   {{date}}
 * @brief  G5 IM EtherCAT CoE definitions.
 *
 *         Automatically generated by {{appname}}
 *         All edits will be destroyed
 */

#include "g5im_coe.h"
{{#pdos}}

/******************************************************************************
*	Object 0x{{hex_index}}: {{description}}
******************************************************************************/
const TSDOINFOENTRYDESC asEntryDesc0x{{hex_index}}[] = {
{{#subs}}
    { {{deftype}}, {{pdo_bitsize}}, {{access_code_hex}} }, /* Subindex {{subindex}}: {{description}} */
{{/subs}}
};
const UCHAR aName0x{{hex_index}}[] = "{{description}}\000{{#dsubs}}{{description}}\000{{/dsubs}}\377";

TOBJ{{hex_index}} {{symbol}} = { {{hex_defaults}} };
{{/pdos}}   
/******************************************************************************
*	Application Object Dictionary
******************************************************************************/
TOBJECT ApplicationObjDic[] = {
{{#pdos}}
    /* {{description}} */
    {NULL,NULL,  0x{{hex_index}}, { {{deftype}}, {{objflags}} }, asEntryDesc0x{{hex_index}}, aName0x{{hex_index}}, &{{symbol}}, NULL, NULL, 0x0000},
{{/pdos}}    {NULL,NULL, 0xFFFF, {0, 0}, NULL, NULL, NULL, NULL, NULL, 0x0000}};

/******************************************************************************
*   Application helper functions
******************************************************************************/

void PDO_ResetOutputs(void)
{
{{#pdos}}{{#subs}}{{#rxpdo?}}    {{symbol}}.{{subsymbol}} = {{default}}; // {{description}}
{{/rxpdo?}}{{/subs}}{{/pdos}}}

void APPL_InputMapping(void* pData)
{
    int j;
    uint8_t *data = (uint8_t *)pData;

    for (j = 0; j < sTxPDOassign.u16SubIndex0; j++)
    {
        switch (sTxPDOassign.aEntries[j])
        { {{#pdos}}{{#tx_pdo_map?}}
        case 0x{{hex_index}}: // {{description}}{{#mapped_subs}}
            // {{description}}
            {{{tx_pdo_code}}} {{/mapped_subs}}
            break;{{/tx_pdo_map?}}{{/pdos}}
        }
    }
}

void APPL_OutputMapping(void* pData)
{
    int j;
    uint8_t *data = (uint8_t *)pData;

    for (j = 0; j < sRxPDOassign.u16SubIndex0; j++)
    {
        switch (sRxPDOassign.aEntries[j])
        { {{#pdos}}{{#rx_pdo_map?}}
        case 0x{{hex_index}}: // {{description}}{{#mapped_subs}}
            // {{description}}
            {{{rx_pdo_code}}} {{/mapped_subs}}
            break;{{/rx_pdo_map?}}{{/pdos}}
        }
    }
}
